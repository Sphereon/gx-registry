@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix gax-validation:  <http://w3id.org/gaia-x/validation#> .

@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix gax-core: <http://w3id.org/gaia-x/core#> .
@prefix gax-node: <http://w3id.org/gaia-x/node#> .
@prefix gax-resource: <http://w3id.org/gaia-x/resource#> .
@prefix gax-participant: <http://w3id.org/gaia-x/participant#> .
@prefix gax-service: <http://w3id.org/gaia-x/service#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix did: <https://www.w3.org/TR/did-core/#> .

gax-validation:ComputeShape
	a sh:NodeShape ;
	sh:targetClass gax-service:Compute ;
	sh:property [ sh:path gax-service:tenantSeparation ;
				  sh:name "tenant separation" ;
				  sh:order 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:flavor ;
				  sh:name "flavor" ;
				  sh:order 2 ;
				  sh:minCount 1 ;
				  sh:node gax-validation:FlavorShape ] ;
	sh:property [ sh:path gax-service:isPartOfScalingGroup ;
				  sh:name "is part of scaling group" ;
				  sh:order 3 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:imageRegistry ;
				  sh:name "image registry" ;
				  sh:order 4 ;
				  sh:minCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:network ;
				  sh:name "network" ;
				  sh:order 5 ;
				  sh:minCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:storage ;
				  sh:name "storage" ;
				  sh:order 6 ;
				  sh:minCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:identity ;
				  sh:name "identity" ;
				  sh:order 7 ;
				  sh:minCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:providedBy ;
				  sh:name "provided by" ;
				  sh:order 1 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:aggregationOf ;
				  sh:name "aggregation of" ;
				  sh:order 2 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:dependsOn ;
				  sh:name "depends on" ;
				  sh:order 3 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:termsAndConditions ;
				  sh:name "terms and conditions" ;
				  sh:order 4 ;
				  sh:minCount 1 ;
				  sh:node gax-validation:TermsAndConditionsShape ] ;
	sh:property [ sh:path gax-service:policies ;
				  sh:name "policies" ;
				  sh:order 5 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:dataProtectionRegime ;
				  sh:name "data protection regime" ;
				  sh:order 6 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:dataExport ;
				  sh:name "data export" ;
				  sh:order 7 ;
				  sh:minCount 1 ;
				  sh:node gax-validation:DataExportShape ] ;
	sh:property [ sh:path gax-service:serviceTitle ;
				  sh:name "service title" ;
				  sh:order 8 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dct:description ;
				  sh:name "description" ;
				  sh:order 9 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path dcat:keyword ;
				  sh:name "keyword" ;
				  sh:order 10 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:provisionType ;
				  sh:name "provision type" ;
				  sh:order 11 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:endpoint ;
				  sh:name "endpoint" ;
				  sh:order 12 ;
				  sh:node gax-validation:EndpointShape ] ;
.

gax-validation:FlavorShape
	a sh:NodeShape ;
	sh:targetClass gax-core:Flavor ;
	sh:property [ sh:path gax-core:name ;
				  sh:name "name" ;
				  sh:order 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:cpu ;
				  sh:name "cpu" ;
				  sh:order 2 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:CPUShape ] ;
	sh:property [ sh:path gax-core:numberOfvCPUs ;
				  sh:name "number ofv c p us" ;
				  sh:order 3 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:integer ] ;
	sh:property [ sh:path gax-core:gpu ;
				  sh:name "gpu" ;
				  sh:order 4 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:GPUShape ] ;
	sh:property [ sh:path gax-core:numberOfvGPUs ;
				  sh:name "number ofv g p us" ;
				  sh:order 5 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:integer ] ;
	sh:property [ sh:path gax-core:GpuPassThrough ;
				  sh:name " gpu pass through" ;
				  sh:order 6 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:boolean ] ;
	sh:property [ sh:path gax-core:fpga ;
				  sh:name "fpga" ;
				  sh:order 7 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:FPGAShape ] ;
	sh:property [ sh:path gax-core:ramSize ;
				  sh:name "ram size" ;
				  sh:order 8 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:MeasureShape ] ;
	sh:property [ sh:path gax-core:rootDisk ;
				  sh:name "root disk" ;
				  sh:order 9 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:DiskShape ] ;
	sh:property [ sh:path gax-core:additionalDisk ;
				  sh:name "additional disk" ;
				  sh:order 10 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:DiskShape ] ;
	sh:property [ sh:path gax-core:performanceClass ;
				  sh:name "performance class" ;
				  sh:order 11 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:hypervisor ;
				  sh:name "hypervisor" ;
				  sh:order 12 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
.

gax-validation:DiskShape
	a sh:NodeShape ;
	sh:targetClass gax-core:Disk ;
	sh:property [ sh:path gax-core:size ;
				  sh:name "size" ;
				  sh:order 1 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:MeasureShape ] ;
	sh:property [ sh:path gax-core:type ;
				  sh:name "type" ;
				  sh:order 2 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:name ;
				  sh:name "name" ;
				  sh:order 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:vendor ;
				  sh:name "vendor" ;
				  sh:order 2 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
.

gax-validation:MeasureShape
	a sh:NodeShape ;
	sh:targetClass gax-core:Measure ;
	sh:property [ sh:path gax-core:value ;
				  sh:name "value" ;
				  sh:order 1 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:float ] ;
	sh:property [ sh:path gax-core:unit ;
				  sh:name "unit" ;
				  sh:order 2 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
.

gax-validation:CPUShape
	a sh:NodeShape ;
	sh:targetClass gax-core:CPU ;
	sh:property [ sh:path gax-core:cpuArchitecture ;
				  sh:name "cpu architecture" ;
				  sh:order 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:cpuGeneration ;
				  sh:name "cpu generation" ;
				  sh:order 2 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:cpuFlag ;
				  sh:name "cpu flag" ;
				  sh:order 3 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-service:smtIsEnabled ;
				  sh:name "smt is enabled" ;
				  sh:order 4 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:boolean ] ;
	sh:property [ sh:path gax-core:numberOfCores ;
				  sh:name "number of cores" ;
				  sh:order 5 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:integer ] ;
	sh:property [ sh:path gax-core:numberOfThreads ;
				  sh:name "number of threads" ;
				  sh:order 6 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:integer ] ;
	sh:property [ sh:path gax-core:frequency ;
				  sh:name "frequency" ;
				  sh:order 7 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:MeasureShape ] ;
	sh:property [ sh:path gax-core:boostFrequency ;
				  sh:name "boost frequency" ;
				  sh:order 8 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:MeasureShape ] ;
	sh:property [ sh:path gax-core:cacheSize ;
				  sh:name "cache size" ;
				  sh:order 9 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:MeasureShape ] ;
	sh:property [ sh:path gax-core:allowedSocket ;
				  sh:name "allowed socket" ;
				  sh:order 10 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:name ;
				  sh:name "name" ;
				  sh:order 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:vendor ;
				  sh:name "vendor" ;
				  sh:order 2 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
.

gax-validation:FPGAShape
	a sh:NodeShape ;
	sh:targetClass gax-core:FPGA ;
	sh:property [ sh:path gax-core:generation ;
				  sh:name "generation" ;
				  sh:order 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:name ;
				  sh:name "name" ;
				  sh:order 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:vendor ;
				  sh:name "vendor" ;
				  sh:order 2 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
.

gax-validation:GPUShape
	a sh:NodeShape ;
	sh:targetClass gax-core:GPU ;
	sh:property [ sh:path gax-core:gpuGeneration ;
				  sh:name "gpu generation" ;
				  sh:order 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:memorySize ;
				  sh:name "memory size" ;
				  sh:order 2 ;
				  sh:maxCount 1 ;
				  sh:node gax-validation:MeasureShape ] ;
	sh:property [ sh:path gax-core:memoryType ;
				  sh:name "memory type" ;
				  sh:order 3 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-resource:connection ;
				  sh:name "connection" ;
				  sh:order 4 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:name ;
				  sh:name "name" ;
				  sh:order 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:vendor ;
				  sh:name "vendor" ;
				  sh:order 2 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
.

gax-validation:EndpointShape
	a sh:NodeShape ;
	sh:targetClass gax-service:Endpoint ;
	sh:property [ sh:path gax-service:endPointURL ;
				  sh:name "end point u r l" ;
				  sh:order 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-service:standardConformity ;
				  sh:name "standard conformity" ;
				  sh:order 2 ;
				  sh:nodeKind sh:IRI ] ;
	sh:property [ sh:path gax-service:endpointDescription ;
				  sh:name "endpoint description" ;
				  sh:order 3 ;
				  sh:datatype xsd:anyURI ] ;
.

gax-validation:DataExportShape
	a sh:NodeShape ;
	sh:targetClass gax-core:DataExport ;
	sh:property [ sh:path gax-core:requestType ;
				  sh:name "request type" ;
				  sh:order 1 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:accessType ;
				  sh:name "access type" ;
				  sh:order 2 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
	sh:property [ sh:path gax-core:formatType ;
				  sh:name "format type" ;
				  sh:order 3 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
.

gax-validation:TermsAndConditionsShape
	a sh:NodeShape ;
	sh:targetClass gax-core:TermsAndConditions ;
	sh:property [ sh:path gax-core:content ;
				  sh:name "content" ;
				  sh:order 1 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:anyURI ] ;
	sh:property [ sh:path gax-core:hash ;
				  sh:name "hash" ;
				  sh:order 2 ;
				  sh:minCount 1 ;
				  sh:maxCount 1 ;
				  sh:datatype xsd:string ] ;
.
